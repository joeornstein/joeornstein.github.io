{
  "articles": [
    {
      "path": "index.html",
      "title": "Political Analysis in R",
      "description": "The website for the course.\n",
      "author": [
        {
          "name": "Joe Ornstein",
          "url": "https://joeornstein.github.io/"
        }
      ],
      "contents": "\r\n\r\nContents\r\nOverview\r\nGetting Started\r\nR\r\nRStudio\r\nAnnouncements & Discussion: GroupMe\r\nVersion Control: git\r\nReference Management: Zotero\r\nSocial Annotation: Hypothesis\r\nMemory Aid: Anki (Optional)\r\n\r\n\r\nOverview\r\nIn this course, you’ll learn how to work with data using the R programming language.1 By the end of the semester, you’ll be able to:\r\nWrite code to read, tidy, and summarize datasets\r\nCreate beautiful and informative data visualizations\r\nDraw thoughtful conclusions from data\r\nOrganize your work so that it is transparent and reproducible\r\nAll the course materials you need will be available on this website. Check the Schedule tab for an overview of each week’s topics and assignments. On the navbar, you can also find links to read the syllabus, schedule an office hours appointment, read your classmates’ comments on the readings, and visit the class code repository.\r\nGetting Started\r\nThere is a lot of software to install for this class, but in the instructions below I’ve tried to make it as straightforward as possible. (And everything is free!) Before the end of our first week, please complete the following steps.\r\n\r\nR\r\nYou won’t get super far in an R class without R. The most current version is available here. To download, click link for your operating system (i.e. Mac, Windows, Linux), then follow the instructions on the page.\r\nRStudio\r\nR is the programming language itself, but it comes with a pretty unfriendly interface.\r\n\r\nYou don’t want to do all your typing in that lonely black box. Instead, you want RStudio, a piece of software that makes R much prettier. Download the RStudio Desktop version here.\r\nAnnouncements & Discussion: GroupMe\r\nPlease join our class GroupMe to to receive announcements and participate in class discussions.\r\nVersion Control: git\r\nProfessional coders use a version control system called git to keep track of their code. If you’re on a Mac, skip this section. Your machine already has it installed.2 If you use a PC, follow the installation instructions here.\r\nUsing git to track changes in your code involves a bit of struggle on the front end, but it is well worth it (Bryan 2017).3 I’ll walk you through the basics in class.\r\nReference Management: Zotero\r\nThis software makes it blindingly simple to keep track of and format your citations. It also plays really nicely with RStudio. Download it here and follow the setup instructions. The Chrome extension is particularly useful; anything you find on the Internet can be saved to your library with one click.\r\nSocial Annotation: Hypothesis\r\nThis semester, we’ll be using a social annotation platform called Hypothesis. That way, everyone will be able to post comments/questions/concerns/memes directly into the reading assignments. Follow these steps to get started:\r\nClick the book icon in the top-right corner of the course website. This will take you to our Hypothesis Group Page.\r\nIf you don’t already have an account, you will be prompted to create one. Make your username something like firstname_lastname so we know who is posting!\r\nHypothesis works best with Google Chrome. If you don’t have it, install it here.\r\nInstall the Chrome extension. When you do, it should take you to a welcome page with instructions on how to log in, pin the extension, and start annotating pages!\r\n\r\nRead the syllabus and add comments. Whenever you annotate a reading, just make sure that you are posting to the Group instead of Public (see the dropdown menu at the top of the extension).\r\nMemory Aid: Anki (Optional)\r\nA lot of learning to write code is memorizing the names of functions and what they do. This is the boring and frustrating part, but there are ways to make it somewhat less boring and frustrating. Do yourself a favor and take 20 minutes and play through Case (2018). If you’re convinced, download Anki. It’s not the prettiest spaced repetition software out there, but it is free, streamlined, highly customizable, and has a large, dedicated fanbase.\r\n\r\n\r\n\r\nBryan, Jennifer. 2017. “Excuse Me, Do You Have a Moment to Talk about Version Control?” https://doi.org/10.7287/peerj.preprints.3159v2.\r\n\r\n\r\nCase, Nicky. 2018. “How To Remember Anything Forever-Ish.” https://ncase.me/remember/.\r\n\r\n\r\nR is a powerful (and in-demand!) tool for data analysis and communication. For example, this very website was built with R.↩︎\r\nI think? If you’re on a Mac and you can’t get git to work, let me know!↩︎\r\nIt’s something you can put on your resume and people will be super impressed.↩︎\r\n",
      "last_modified": "2021-08-16T14:27:18-04:00"
    },
    {
      "path": "week-01.html",
      "title": "Week 1",
      "description": "Getting all the software up and running",
      "author": [],
      "contents": "\r\n\r\nContents\r\nIntroductions\r\nReading Assignments\r\nTeam Project\r\n\r\nThis week, we’ll make sure that everything we need is installed and working on our computers. To begin, please complete the instructions in the Getting Started section on the home page.\r\nIntroductions\r\nOn the first day, we’ll begin by collecting and analyzing some data about the class. Please complete the following survey.\r\n\r\n\r\n\r\n\r\nThe responses will be available here.\r\nReading Assignments\r\nBefore next week, please read and annotate the following:\r\nThe Syllabus\r\nHealy Preface (and complete the package installation instructions at the bottom)\r\nHealy Chapter 2\r\nTeam Project\r\nTBD, depending on how much progress we make with R and RStudio.\r\n\r\n\r\n\r\n",
      "last_modified": "2021-08-16T14:27:19-04:00"
    },
    {
      "path": "week-02.html",
      "title": "Week 2",
      "description": "The week we make our first data visualizations!",
      "author": [],
      "contents": "\r\n\r\nContents\r\nReading Assignments\r\nTeam Project\r\n\r\nIn its raw form, data is completely unintelligible – it’s just a bunch of numbers, and our brains aren’t really good at juggling a bunch of numbers. But our brains are extremely good at seeing patterns in visual images. Well-crafted data visualizations take advantage of that fact to communicate lots of information in an aesthetically pleasing way.\r\n\r\nThis week, we start building our own visualizations using the ggplot2 package (a part of the tidyverse). It will take some time to learn all of the function syntax, so be patient with yourself. Once you get the hang of it, you’ll have an endlessly flexible tool for exploring and communicating patterns in your data. Let’s get started.\r\nReading Assignments\r\nBefore next week, please read and annotate the following:\r\nHealy Chapter 3\r\nHealy Chapter 4\r\nTeam Project\r\nTBD\r\n\r\n\r\n\r\n",
      "last_modified": "2021-08-16T14:27:20-04:00"
    },
    {
      "path": "week-03.html",
      "title": "Week 3",
      "description": "After this week, your charts will be *extremely* fancy",
      "author": [],
      "contents": "\r\n\r\nContents\r\nReading Assignments\r\nTeam Project\r\n\r\nThis week, we expand our data visualization repertoire, exploring different kinds of data (e.g. distributions, change over time) and making our charts prettier and prettier.\r\nReading Assignments\r\nBefore next week, please read and annotate Wrangling Penguins, by Allison Horst. You’ll learn what to do when your data doesn’t come to you exactly the way you want it.\r\nTeam Project\r\nTBD\r\n\r\n\r\n\r\n",
      "last_modified": "2021-08-16T14:27:21-04:00"
    },
    {
      "path": "week-04.html",
      "title": "Week 4",
      "description": "Wrangle that data into shape",
      "author": [],
      "contents": "\r\n\r\nContents\r\nReading Assignments\r\nTeam Project\r\n\r\nUp to now, we’ve been working with pretty tidy datasets. Every column is a variable, every row is an observation, and every value is where it should be. But things are not always this way. More often than you’re going to like, data comes to you an unruly mess, and you’ll need to tidy it up before you can even start to explore it.\r\n Over the next few weeks, we’ll learn some of the most important functions in the tidyverse for data wrangling.\r\nReading Assignments\r\nBefore next week, read up on:\r\nHow to join information from two dataframes together. left_join() is the most useful. Here’s a good explanation, and here’s an interactive primer.1\r\nHealy Chapter 5\r\nTeam Project\r\nTBD\r\n\r\nWarning: doesn’t play nice with Hypothesis highlights, but you can still leave page notes.↩︎\r\n",
      "last_modified": "2021-08-16T14:27:22-04:00"
    }
  ],
  "collections": []
}
