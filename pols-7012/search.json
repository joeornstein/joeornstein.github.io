{
  "articles": [
    {
      "path": "index.html",
      "title": "Introduction to Political Methodology",
      "description": "A PhD-level course on understanding data\n",
      "author": [
        {
          "name": "Joe Ornstein",
          "url": "https://joeornstein.github.io/"
        }
      ],
      "contents": "\r\n\r\nContents\r\nOverview\r\nGetting Started\r\nData Analysis: R and RStudio\r\nVersion Control: git\r\nReference Management: Zotero\r\nAnnouncements and Discussion: GroupMe\r\nSocial Annotation: Hypothesis\r\nMemory Aid: Anki\r\nNote-Taking Software (Optional)\r\n\r\n\r\nOverview\r\nIn this course, you will learn the math and coding skills you need to conduct quantitative social science research. In the first half of the semester, we’ll get comfortable working with data: cleaning it up, visualizing it, and summarizing it. In the second half of the semester, we’ll build statistical models to help us interpret our data, communicate uncertainty, and make causal claims. A key theme of the course is that, to deeply understand your data, you must do both.\r\nAll the course materials you need will be available on this website. Check the Schedule tab for an overview of each week’s topics and assignments. On the navbar, you can also find links to read the syllabus, schedule an office hours appointment, read your classmates’ comments on the readings, and visit the code repository.\r\nGetting Started\r\nThere is a lot of software to install for this class, but in the instructions below I’ve tried to make it as straightforward as possible. (And everything is free!) Before the end of our first week, please complete the following steps.\r\n\r\nData Analysis: R and RStudio\r\nFor starters, you will need R. The most current version is available here. To download, click link for your operating system (i.e. Mac, Windows, Linux), then follow the instructions on the page.\r\nR is the programming language itself, but it comes with a pretty unfriendly interface.\r\n\r\nYou don’t want to do all your typing in that lonely black box. Instead, you want RStudio, a piece of software that makes R much prettier. Download the RStudio Desktop version here.\r\nVersion Control: git\r\nProfessional coders use a version control system called git to keep track of their code. If you’re on a Mac, your computer probably already has it installed.1 If not, or you use a PC, follow the installation instructions here.\r\nOnce git is installed, it will want you to introduce yourself. To do so, follow these three steps:\r\nIn RStudio, click Tools > Shell. This will open your computer’s shell, a program that runs other programs.\r\nType and enter git config --global user.name 'Jane Doe' (substituting your name for Jane Doe).\r\nType and enter git config --global user.email 'jane@example.com' (substituting your email for that fake email address).\r\nUsing git to track changes in your code involves a bit of struggle on the front end, but it is well worth it (Bryan 2017). I’ll walk you through the basics in class.\r\nReference Management: Zotero\r\nThis software makes it blindingly simple to keep track of and format your citations. It also plays really nicely with RStudio. Download it here and follow the setup instructions. The Chrome extension is particularly useful; anything you find on the Internet can be saved to your library with one click.\r\nAfter Zotero is installed, create a username and password (if you click the green sync button at the top right, it will prompt you to create an account).\r\nAnnouncements and Discussion: GroupMe\r\nPlease join our class GroupMe to to receive announcements and participate in class discussions.\r\nSocial Annotation: Hypothesis\r\nThis semester, we’ll be using a social annotation platform called Hypothesis. That way, everyone will be able to post comments/questions/concerns/memes directly into the reading assignments. Follow these steps to get started:\r\nClick the book icon in the top-right corner of the course website. This will take you to our Hypothesis Group Page.\r\nIf you don’t already have an account, you will be prompted to create one. Make your username something like firstname_lastname so we know who is posting!\r\nHypothesis works best with Google Chrome. If you don’t have it, install it here.\r\nInstall the Chrome extension. When you do, it should take you to a welcome page with instructions on how to log in, pin the extension, and start annotating pages!\r\n\r\nGo to the syllabus and add your questions/comments/memes. Whenever you annotate a reading, just make sure that you are posting to the Group instead of Public (see the dropdown menu at the top of the extension).\r\nMemory Aid: Anki\r\nA lot of grad school – particularly the methods courses – involves rote memorization of things like formulas and code syntax. This is the boring and frustrating part, but there are ways to make it somewhat less boring and frustrating. Do yourself a favor and take 20 minutes and play through Case (2018). If you’re convinced, download Anki. It’s not the prettiest spaced repetition software out there, but it is free, streamlined, highly customizable, and has a large, dedicated fanbase.\r\nNote-Taking Software (Optional)\r\nWhile we’re talking software, consider how you want to organize all the notes you generate in grad school. Information is going to be coming at you like a firehouse, and you’ll want a system that you can trust as your “external brain.”2 I highly recommend reading Ahrens (2017), a book that is much more fascinating than a book about note-taking should rightfully be.\r\n\r\n\r\nAhrens, Sönke. 2017. How to Take Smart Notes: One Simple Technique to Boost Writing, Learning and Thinkingfor Students, Academics and Nonfiction Book Writers.\r\n\r\n\r\nBryan, Jennifer. 2017. “Excuse Me, Do You Have a Moment to Talk about Version Control?” https://doi.org/10.7287/peerj.preprints.3159v2.\r\n\r\n\r\nCase, Nicky. 2018. “How To Remember Anything Forever-Ish.” https://ncase.me/remember/.\r\n\r\n\r\nI think? If you’re on a Mac and you can’t get git to work, let me know!↩︎\r\nDon’t be like I was in grad school and write all your notes in a bunch of random notebooks that you throw in the trash at the end of the semester; so much wasted effort!\r\n\r\n↩︎\r\n",
      "last_modified": "2021-09-23T17:07:29-04:00"
    },
    {
      "path": "week-01.html",
      "title": "Week 1",
      "description": "Getting all the software up and running",
      "author": [],
      "contents": "\r\n\r\nContents\r\nIntroductions\r\nReading Assignments\r\nProblem Set\r\n\r\nThis week, we will familiarize ourselves with a suite of software that will make life as a social scientist so much nicer – tools for managing your data, your references, and your knowledge. Make sure you’ve completed everything from the Getting Started section on the home page.\r\nIntroductions\r\nOn our first day, we will be collecting and analyzing some data about the class itself. Please complete the following survey.1\r\n\r\n\r\n\r\n\r\nThe results will be available here.\r\nReading Assignments\r\nBefore Week 2, please read and annotate the following:\r\nHealy Preface (and complete the package installation instructions at the bottom)\r\nTeacup Giraffes (Intro to R module)\r\nHealy Chapter 2\r\nHealy Chapter 3\r\nOptional:\r\nHealy Chapter 1: A nice review of the evidence on what makes an effective visualization.\r\nProblem Set\r\nOur first problem set will ensure that all the software is functioning on your machine. If you can complete all of the following steps, then you’re in good shape!\r\nOpen intro-to-political-methodology.Rproj and pull the latest updates from the GitHub repository.\r\nOpen R/week-01/problem-set-01.Rmd.\r\nEdit the metadata so that you are the author.\r\nAdd an in-text citation to something from your Zotero library.\r\nMake sure you have the tinytex package installed. This is the library you need to convert RMarkdown documents into PDFs. To install, enter these two lines into your RStudio console.\r\n\r\n\r\ninstall.packages('tinytex')\r\ntinytex::install_tinytex()\r\n\r\n\r\n\r\nKnit to PDF.\r\nSubmit the knitted PDF document to eLC by our next class.2\r\nIf the embedded survey isn’t working for some reason, click here.↩︎\r\nAll problem sets due by the following week’s class (so this one is due before our second class). Feel free to work together on problem sets, but I encourage you to type out the solutions yourself instead of copying-pasting from others. You can’t learn this stuff without doing it.\r\n\r\n↩︎\r\n",
      "last_modified": "2021-09-23T17:07:30-04:00"
    },
    {
      "path": "week-02.html",
      "title": "Week 2",
      "description": "How to make effective data visualizations",
      "author": [],
      "contents": "\r\n\r\nContents\r\nReading Assignments\r\nProblem Set\r\n\r\nIn its raw form, data is completely unintelligible to the human mind.1 It’s just a bunch of numbers. So, over time, we humans have developed three techniques to help make sense of data: visualizations, summaries, and models. We’re going to start the course with visualization, because it is the most intuitive of the three. Over the next few weeks, we’ll discuss what makes an informative, compelling data visualization, and learn how to construct them ourselves in R.\r\n\r\nThe human mind is hardwired to detect patterns in images, and a well-crafted data visualization can take advantage of that fact to communicate lots of information in an aesthetically pleasing way. And it’s about more than communication. Charts can reveal patterns in data that summary statistics alone might miss, as the Datasaurus Dozen artfully reveals…\r\n\r\nThis week, we start building our own visualizations using the ggplot2 package (a part of the tidyverse). It will take some time to learn all of the function syntax, so be patient with yourself. Once you get the hang of it, you’ll have an endlessly flexible tool for exploring and communicating patterns in your data. Let’s get started.\r\nReading Assignments\r\nNext week, we’ll build some more intricate visualizations, and consider what to do if your dataset isn’t formatted exactly that way you need it to be prior to visualizing. Please read and annotate the following before next week:\r\nWrangling Penguins\r\nHealy Chapter 4\r\nHealy Chapter 5\r\nOptional:\r\nIf you want to learn how to make maps in ggplot, Healy Chapter 7 is a great resource.\r\nFor more practice with ggplot, this chapter in Hadley Wickham’s book is a nice resource.2\r\nProblem Set\r\nUsing one of the datasets we’ve been working with in class, submit create a data visualization using ggplot. Your submission should:\r\nCommunicate some interesting result\r\nUse more than one aesthetic\r\nBe easy to interpret at a glance (you can include a short caption – labs(caption = ...) – if you would like).\r\nBe reproducible; submit your figure as a .png file, plus the .R script that produced it.\r\nConsider this a friendly competition! I will look through the sumbmissions and pick my favorites, and their creators will receive honor, glory, and adoration.\r\n\r\nYes, I know that the word “data” is technically plural, but the sentence “In their raw form, data are completely unintelligible” seemed…unintelligible to me.↩︎\r\nHadley is the author of ggplot, so he knows a trick or two.↩︎\r\n",
      "last_modified": "2021-09-23T17:07:31-04:00"
    },
    {
      "path": "week-03.html",
      "title": "Week 3",
      "description": "After this week, your charts will be *extremely* fancy",
      "author": [],
      "contents": "\r\n\r\nContents\r\nReading Assignments\r\nProblem Set\r\n\r\nReading Assignments\r\nNext week we’ll start learning how to tidy up messy datasets. In preparation, please read and annotate the following:\r\nR4DS Chapter 1: Introduction\r\nR4DS Chapter 9: Wrangle\r\nR4DS Chapter 11: Import (skip sections 11.3 and 11.4)\r\nR4DS Chapter 12: Tidy Data\r\nHealy Chapter 8\r\nOptional:\r\nI’m assigning what I think are the crucial chapters of R4DS, but if you really want to get deep into R programming, feel free to look over the chapters we skipped. In particular, the chapter on “Strings” if you want to work with text data, and “Dates & Times” if you want to work with time series.\r\nProblem Set\r\nTake your visualization from last week and refine it using the techniques we learned in Week 3. Submit a PDF from a knitted RMarkdown document, containing your visualization and a page or two of prose explaining your research question and findings. Incude a bibliography generated by the Zotero integration, and submit both your PDF and .Rmd file.\r\n\r\n\r\n\r\n",
      "last_modified": "2021-09-23T17:07:32-04:00"
    },
    {
      "path": "week-04.html",
      "title": "Week 4",
      "description": "Wrangling Your Data",
      "author": [],
      "contents": "\r\n\r\nContents\r\nReading Assignments\r\nProblem Set\r\n\r\nUp to now, we’ve been working with pretty tidy datasets. Every column is a variable, every row is an observation, and every value is where it should be. But things are not always this way. More often than you’re going to like, data comes to you an unruly mess, and you’ll need to tidy it up before you can even start to explore it.\r\n\r\nOver the next few weeks, we’ll learn some of the most important functions in the tidyverse for data importing, wrangling, and summarizing. We’ll introduce the essential summary statistics that we use to describe central tendency, variation, and correlation.\r\nReading Assignments\r\nBefore next week, read up on:\r\nHow to join information from two dataframes together. left_join() is the most useful. Here’s a good explanation, and here’s an interactive primer.1\r\nTeacups, Giraffes, and Statistics (Modules 1-5)\r\nProblem Set\r\nNo problem set due this week.\r\n\r\nWarning: doesn’t play nice with Hypothesis highlights, but you can still leave page notes.↩︎\r\n",
      "last_modified": "2021-09-23T17:07:33-04:00"
    },
    {
      "path": "week-05.html",
      "title": "Week 5",
      "description": "Describing Your Data",
      "author": [],
      "contents": "\r\n\r\nContents\r\nReading Assignments\r\nProblem Set\r\n\r\nThis week we review the essential summary statistics that social scientists use to describe their data, including measures of central tendency, dispersion, and correlation.\r\n\r\n\r\n\r\nFigure 1: Artwork by Allison Horst\r\n\r\n\r\n\r\nReading Assignments\r\nTake a break from reading (or catch up on the reading you missed in previous weeks)!\r\nProblem Set\r\nFor the midterm mini-conference next week, please prepare a 10 minute presentation about a dataset you find interesting (feel free to use one of the datasets we’ve looked at in class, or strike out on your own). Your presentation should describe each step in your analysis pipe: importing, tidying, summarizing, and visualizing. Submit the code you used in your analysis to eLC (R Markdown or standard R scripts are both fine).\r\nPlease send me the title of your presentation at least two days in advance so I can create the mini-conference program.\r\n\r\n\r\n\r\n",
      "last_modified": "2021-09-23T17:07:34-04:00"
    },
    {
      "path": "week-06.html",
      "title": "Week 6",
      "description": "Midterm Mini-Conference",
      "author": [],
      "contents": "\r\n\r\nContents\r\nReading Assignments\r\nProblem Set\r\n\r\nThis week you’ll present a project that follows the entire data analysis pipeline from start to finish: finding the data, importing it, cleaning it up, summarizing it, and building visualizations.\r\n\r\nIf you’re looking for additional practice with the skills we’ve learned over the past five weeks, I highly recommend the RStudio primers, a set of interactive online tutorials. To review the functions we’ve covered so far, check out “The Basics”, “Work With Data”, “Visualize Data”, and “Tidy Your Data”. The other primers are more advanced R functions – you may try them if you’re looking for an extra challenge.\r\nReading Assignments\r\nNext week, we start building mathematical models to help us understand what’s going on in our data. Before then, please read:1\r\nThe Joy of X, Chapters 17 and 18.\r\nMoore & Siegel, Chapter 5.\r\nProblem Set\r\nNo problem set!\r\nBoth links take you to the ebook version hosted by the UGA library. Log in to your library account and they should work. Hypothesis highlights don’t play nicely with the library ebooks, but you can leave page notes if you have questions.\r\n\r\n↩︎\r\n",
      "last_modified": "2021-09-23T17:07:35-04:00"
    },
    {
      "path": "week-07.html",
      "title": "Week 7",
      "description": "Building our first statistical model, plus all the calculus you need to make it go",
      "author": [],
      "contents": "\r\n\r\nContents\r\nReading Assignments\r\nProblem Set\r\n\r\nThis week, we introduce the linear model, the workhorse of empirical social science. In its most basic form, we take two variables from our dataset and try to find the “line of best fit” – the line that best describes the relationship between them. For example, the line of best fit below suggests that places where infant mortality is high also tend to be places where fertility is high, and vice versa:\r\n\r\n\r\nggplot(data = swiss,\r\n       mapping = aes(x = Fertility,\r\n                     y = Infant.Mortality)) +\r\n  geom_point() +\r\n  # the line of best fit\r\n  geom_smooth(method = 'lm', se = FALSE) +\r\n  theme_bw() +\r\n  labs(title = 'The Relationship Between Fertility and Infant Mortality',\r\n       subtitle = 'Swiss Provinces (1888)')\r\n\r\n\r\n\r\n\r\nBut where did that line of best fit come from? What does it even mean to be the “best fit”? To answer that question, we first need a language that will help us talk about how to minimize error or maximize model fit. That language is differential calculus.\r\n\r\nCome with me on a journey.\r\nReading Assignments\r\nNext week we discuss the art of causal inference. Our guide is The Effect, by Nick Huntington-Klein. The whole book is great, but start with:\r\nChapter 6: Causal Diagrams\r\nChapter 7: Drawing Causal Diagrams\r\nChapter 8: Closing Back Doors\r\nProblem Set\r\nPractice a bit with calculus here. Complete and submit to eLC in any format you like.\r\n\r\n\r\n\r\n",
      "last_modified": "2021-09-23T17:07:39-04:00"
    },
    {
      "path": "week-08.html",
      "title": "Week 8",
      "description": "Correlation does not imply causation (but it's a good place to start)",
      "author": [],
      "contents": "\r\n\r\nContents\r\nReading Assignments\r\nProblem Set\r\n\r\n\r\nReading Assignments\r\nNext week we explore the world of matrix algebra. Moore & Siegel are our guides:\r\nMoore & Siegel, Chapter 12. Ignore sections 12.3.6 and 12.3.7 on computing determinants and inverses by hand. We have computers that do that for us now.\r\nProblem Set\r\nConsider a research question you’re interested in and draw a DAG to represent the web of relevant causal relationships - R or by hand are both acceptable. What are the backdoor paths between your treatment and outcome (i.e. alternative explanations)? What variables must you condition on to close them?\r\n\r\n\r\n\r\n",
      "last_modified": "2021-09-23T17:07:40-04:00"
    },
    {
      "path": "week-09.html",
      "title": "Week 9",
      "description": "Regression analysis: this is not the last time you'll see it",
      "author": [],
      "contents": "\r\n\r\nContents\r\nReading Assignments\r\nProblem Set\r\n\r\nThis week, we discuss the linear model as a general purpose tool for conditioning on confounding variables and recovering causal estimands. We will highlight the strengths and limitations of this approach, and show how to estimate the model’s parameters using matrix algebra.\r\n\r\nReading Assignments\r\nNext time, we talk about how to express our uncertainty about these estimates.\r\nTeacup Giraffes Module 6\r\nThe Joy of X, Chapters 22 and 23.\r\nSeeing Theory, some nice interactive explanations of concepts from probability theory\r\nProblem Set\r\nNo problem set this week. Enjoy!\r\n\r\n\r\n\r\n",
      "last_modified": "2021-09-23T17:07:40-04:00"
    }
  ],
  "collections": []
}
